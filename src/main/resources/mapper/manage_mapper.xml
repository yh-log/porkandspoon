<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="kr.co.porkandspoon.dao.ManageDAO">
 		
 	<select id="getDirectInfo" resultType="kr.co.porkandspoon.dto.ManageDTO">
 		SELECT ds.address,ds.address_detail,ds.name as spotName,u.name FROM direct_store ds
 		 LEFT JOIN user u ON ds.owner = u.username WHERE ds.owner = #{owner}
 	</select>	
 
 
 
	 <insert 
	    useGeneratedKeys="true"
	    keyColumn="part_idx"
	    keyProperty="part_idx"
		id="setPartWrite" parameterType="Map">
		 	INSERT INTO part(name,birth,gender,is_quit,id,phone,pay,address,creater,join_date)
		 		VALUES(#{name},#{birth},#{gender},#{is_quit},#{id},#{phone},#{pay},#{address},#{creater},#{join_date})
	 </insert> 
 
	 <insert id="setPartHistory" parameterType="Map">
	    INSERT INTO part_history (part_idx, pay, work_date, start_time, end_time, is_done)
	    VALUES (#{part_idx}, #{pay}, #{work_date}, #{start_time}, #{end_time}, #{is_done})
	</insert>
	 
 	<update id="editPartHistory" parameterType="Map">
	 	UPDATE part_history
		    SET 
		        part_idx = #{part_idx}, 
		        pay = #{pay}, 
		        work_date = #{work_date}, 
		        start_time = #{start_time}, 
		        end_time = #{end_time}, 
		        is_done = #{is_done}
		    WHERE history_idx = #{history_idx}
 	</update>
 	
 	
 	<delete id="OneDelPartHistory" parameterType="Map">
 		DELETE FROM part_history WHERE history_idx = #{history_idx}
 	</delete>
 
 
  <insert id="setPartTime" parameterType="Map">
 	INSERT INTO part_time(part_idx,work_date,start_time,end_time)
 		VALUES(#{part_idx},#{work_date},#{start_time},#{end_time})
 </insert> 
   
   <select id="partDetail" resultType="kr.co.porkandspoon.dto.ManageDTO">
   		select * from part where part_idx = #{part_idx}
   </select>
   
   <select id="scheduleDetail" resultType="kr.co.porkandspoon.dto.ManageDTO">
   		select * from part_time where part_idx = #{part_idx}
   </select>
   
   <update id="editPart" parameterType="Map">
	    UPDATE part
	    SET 
	        name = #{name},
	        birth = #{birth},
	        gender = #{gender},
	        is_quit = #{is_quit},
	        id = #{id},
	        phone = #{phone},
	        pay = #{pay},
	        address = #{address},
	        updater = #{updater},
	        join_date = #{join_date},
	        quit_date = CASE 
	                      WHEN #{is_quit} = 'Y' THEN NOW()
	                      ELSE quit_date
	                    END
	    WHERE part_idx = #{part_idx}
	</update>
	
	<delete id="deletePartTime" parameterType="String">
	    DELETE FROM part_time WHERE part_idx = #{part_idx}
	</delete>

 	<select id="count" resultType="int" parameterType="int">
    SELECT CEIL(count(part_idx) / #{cnt}) AS pages
    FROM part
    <where>
        is_quit = 'N' AND id = (select id from direct_store where owner = #{owner})
        <if test="keyword != null and !keyword.equals('') and opt.equals('name')">
            AND name LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
	</select>
   
   <select id="getPartList" resultType="kr.co.porkandspoon.dto.ManageDTO">
    SELECT p.*, s.name as spotName
    FROM part p
    LEFT JOIN direct_store s ON p.id = s.id
    <where>
        p.is_quit = 'N' AND p.id = (select id from direct_store where owner = #{owner})
        <if test="keyword != null and !keyword.equals('') and opt.equals('name')">
            AND p.name LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
    ORDER BY p.join_date DESC
    LIMIT #{limit} OFFSET #{offset}
</select>


 	<select id="Quitcount" resultType="int" parameterType="int">
    SELECT CEIL(count(part_idx) / #{cnt}) AS pages
    FROM part
    <where>
        is_quit = 'Y' AND id = (select id from direct_store where owner = #{owner})
        <if test="keyword != null and !keyword.equals('') and opt.equals('name')">
            AND name LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
	</select>
   
   <select id="getPartQuitList" resultType="kr.co.porkandspoon.dto.ManageDTO">
    SELECT p.*, s.name as spotName
    FROM part p
    LEFT JOIN direct_store s ON p.id = s.id
    <where>
        p.is_quit = 'Y' AND p.id = (select id from direct_store where owner = #{owner})
        <if test="keyword != null and !keyword.equals('') and opt.equals('name')">
            AND p.name LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
    ORDER BY p.join_date DESC
    LIMIT #{limit} OFFSET #{offset}
	</select>
	   
	<select id="getPartTime" resultType="kr.co.porkandspoon.dto.ManageDTO">
	    SELECT ph.history_idx,ph.start_time,ph.end_time,ph.pay,ph.is_done,ph.work_date, p.name AS part_name, p.join_date,p.part_idx
	    FROM part_history ph
	    JOIN part p ON ph.part_idx = p.part_idx
	    WHERE p.id IN (
	        SELECT ds.id 
	        FROM direct_store ds 
	        WHERE ds.owner = #{owner} AND p.is_quit = 'N'
	    )
	</select>

	<select id="getPartNames" resultType="kr.co.porkandspoon.dto.ManageDTO">
		SELECT part_idx,name FROM part WHERE id = (select id from direct_store where owner = #{owner})
	</select>


	<delete id="deletePartHistory" parameterType="map">
	    <![CDATA[
	    DELETE FROM part_history
	    WHERE part_idx = #{part_Idx}
	      AND work_date >= #{string}
	    ]]>
	</delete>

	<!-- 브랜드 리스트 불러오기 -->
	<select id="getBrandList" resultType="kr.co.porkandspoon.dto.ManageDTO">
	    SELECT text,create_date FROM department WHERE id LIKE 'BD%'
	    ORDER BY create_date ASC LIMIT 5
	</select>
	
	<!-- 직영점 리스트 불러오기 -->
	<select id="getDirectList" resultType="kr.co.porkandspoon.dto.ManageDTO">
	    SELECT ds.name as spotName,ds.owner,ds.address,ds.create_date,u.name FROM direct_store ds
 		LEFT JOIN user u ON u.username = ds.owner 
 		WHERE id LIKE 'BY%'
	    ORDER BY create_date ASC LIMIT 5;
	</select>
	
	<!-- 직원 리스트 불러오기 -->
	<select id="getPartList5" resultType="kr.co.porkandspoon.dto.ManageDTO">
		SELECT p.*, s.name as spotName FROM part p LEFT JOIN direct_store s ON p.id = s.id
	    WHERE p.is_quit = 'N' AND p.id = (select id from direct_store where owner = #{owner})
	    ORDER BY p.join_date ASC LIMIT 5
	</select>
	


    <!-- author yh.kim, (25.01.03)
        휴점 등록 페이지 이동 시 부서, 직영점명 조회 -->
    <select id="getUserStoreInfo" parameterType="String" resultType="kr.co.porkandspoon.dto.UserDTO">
        SELECT d.`text` AS parent , ds.name, c.content AS position, ds.id AS dept_name
        FROM user u LEFT JOIN direct_store ds ON u.username = ds.owner
                    LEFT JOIN  department d ON d.id = ds.parent
                    LEFT JOIN code c ON u.`position`= c.name WHERE u.username = #{username}
    </select>

    <!-- author yh.kim, (25.01.03)
        휴점 등록 -->
    <insert id="restWrite"
            useGeneratedKeys="true"
            keyProperty="rest_idx"
            keyColumn="rest_idx"
            parameterType="kr.co.porkandspoon.dto.RestDTO">

        INSERT INTO rest(id, content, start_date, end_date, creater, subject)
            VALUES (#{id}, #{content}, #{start_date}, #{end_date}, #{username}, #{subject})

    </insert>

    <!-- author yh.kim, (25.01.03)
    직영점 휴점 정보 업데이트 -->
    <update id="storeRestUpdate" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE direct_store SET is_close = #{type} WHERE id = #{id}
    </update>

    <!-- author yh.kim, (25.01.03)
        휴점 content 이미지 등록 -->
    <insert id="restFileWrite" parameterType="kr.co.porkandspoon.dto.FileDTO">
        INSERT INTO file (ori_filename, new_filename, type, code_name, pk_idx)
            VALUES(#{ori_filename}, #{new_filename}, #{type}, #{code_name}, #{pk_idx})
    </insert>

    <!-- author yh.kim, (25.01.03)
            휴점 등록 시 공지사항 등록 -->
    <insert id="restBoardWrite"
            useGeneratedKeys="true"
            keyColumn="board_idx"
            keyProperty="board_idx"
            parameterType="kr.co.porkandspoon.dto.RestDTO">
        INSERT INTO free_board (username, subject, content, board_state, department)
            VALUES (#{username}, #{subject}, #{content},'0', #{id})
    </insert>

    <!-- author yh.kim, (25.01.03)
            휴점 등록 시 전사 캘린더 등록 -->
    <insert id="restCalenderWrite"
            useGeneratedKeys="true"
            keyProperty="idx"
            keyColumn="idx"
            parameterType="kr.co.porkandspoon.dto.RestDTO">
        INSERT INTO schedule(username, start_date, end_date, subject, content, type, id)
            VALUES(#{username}, #{start_date}, #{end_date}, #{subject}, #{content}, 'C', #{id})
    </insert>

    <!-- author yh.kim, (25.01.03)
            휴점 상세보기 -->
    <select id="getRestDetail" parameterType="String" resultType="kr.co.porkandspoon.dto.RestDTO">
        SELECT r.rest_idx, r.id, r.subject, r.content, r.creater, r.start_date, r.end_date, u.name AS username, c.content AS position, ds.name AS store_name, d.`text` AS dept_name, r.board_idx, r.schedule_idx
            FROM rest r LEFT JOIN `user` u ON r.creater = u.username
                        LEFT JOIN code c ON u.`position` = c.name
                        LEFT JOIN direct_store ds ON ds.id = r.id
                        LEFT JOIN department d ON d.id = ds.parent
            WHERE r.rest_idx = #{rest_idx}
    </select>

    <!-- author yh.kim, (25.01.03)
            휴점 수정 -->
    <update id="restUpdate" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE rest SET subject = #{subject}, content = #{content}, start_date = #{start_date}, end_date = #{end_date}, updater = #{username}
            WHERE rest_idx = #{rest_idx}
    </update>

    <!-- author yh.kim, (25.01.03)
            휴점 수정 시 캘린더 수정 -->
    <update id="restCalenderUpdate" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE schedule SET start_date = #{start_date}, end_date = #{end_date}, subject = #{subject}, content = #{content}
            WHERE idx = #{schedule_idx}
    </update>

    <!-- author yh.kim, (25.01.03)
                휴점 수정 시 공지사항 수정 -->
    <update id="restBoardUpdate" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE free_board SET subject = #{subject}, content = #{content}
            WHERE board_idx = #{board_idx}
    </update>

    <!-- author yh.kim, (25.01.03)
                휴점 등록 시 게시판, 스케쥴 idx Insert -->
    <update id="restIdxWrite" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE rest SET board_idx = #{board_idx}, schedule_idx = #{schedule_idx} WHERE rest_idx = #{rest_idx}
    </update>

    <!-- author yh.kim, (25.01.04)
                휴점 비활성화 -->
    <update id="restDelete" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE rest SET use_yn = 'N' WHERE rest_idx = #{rest_idx}
    </update>

    <!-- author yh.kim, (25.01.04)
                    휴점 비활성화 시 캘린더 삭제 -->
    <delete id="restCalenderDelete" parameterType="kr.co.porkandspoon.dto.RestDTO">
        DELETE FROM schedule WHERE idx = #{schedule_idx}
    </delete>

    <!-- author yh.kim, (25.01.04)
                        휴점 비활성화 시 공지사항 삭제 -->
    <update id="restBoardDelete" parameterType="kr.co.porkandspoon.dto.RestDTO">
        UPDATE free_board SET use_yn = 'N' WHERE board_idx = #{board_idx}
    </update>

    <!-- author yh.kim, (25.01.04)
                        휴점 리스트 조회 -->
    <select id="restList" parameterType="map" resultType="kr.co.porkandspoon.dto.RestDTO">
        SELECT r.rest_idx, r.subject, r.start_date, r.end_date, u.name, d.`text` AS dept_name, ds.name AS store_name,
        CASE
            WHEN <![CDATA[ STR_TO_DATE(r.end_date, '%Y-%m-%d') < CURDATE() ]]>
                THEN '운영중'
                ELSE '휴점중'
                END AS type,
            (SELECT COUNT(*)
            FROM rest r
            LEFT JOIN `user` u ON r.creater = u.username
            LEFT JOIN direct_store ds ON r.id = ds.id
            LEFT JOIN department d ON d.id = ds.parent
            WHERE 1=1
            <if test="keyword != null and keyword.trim() != ''">
                <choose>
                    <when test="option == 'dept'">
                        <![CDATA[ AND (ds.name LIKE CONCAT('%', #{keyword}, '%') OR d.text LIKE CONCAT('%', #{keyword}, '%')) ]]>
                    </when>
                    <when test="option == 'name'">
                        <![CDATA[ AND u.name LIKE CONCAT('%', #{keyword}, '%') ]]>
                    </when>
                    <when test="option == 'subject'">
                        <![CDATA[ AND r.subject LIKE CONCAT('%', #{keyword}, '%') ]]>
                    </when>
                    <otherwise>
                        <![CDATA[ AND 1 = 0 ]]>
                    </otherwise>
                </choose>
            </if>
            ) AS totalpage
        FROM rest r LEFT JOIN `user` u ON r.creater = u.username
            LEFT JOIN direct_store ds ON r.id = ds.id
            LEFT JOIN department d ON d.id = ds.parent
        WHERE 1=1
        <if test="keyword != null and keyword.trim() != ''">
            <choose>
                <when test="option == 'dept'">
                    <![CDATA[ AND (ds.name LIKE CONCAT('%', #{keyword}, '%') OR d.text LIKE CONCAT('%', #{keyword}, '%')) ]]>
                </when>
                <when test="option == 'name'">
                    <![CDATA[ AND u.name LIKE CONCAT('%', #{keyword}, '%') ]]>
                </when>
                <when test="option == 'subject'">
                    <![CDATA[ AND r.subject LIKE CONCAT('%', #{keyword}, '%') ]]>
                </when>
                <otherwise>
                    <![CDATA[ AND 1 = 0 ]]>
                </otherwise>
            </choose>
        </if>
        ORDER BY <![CDATA[ STR_TO_DATE(r.start_date, '%Y-%m-%d') DESC ]]>
        LIMIT #{offset}, #{limit};
    </select>

    <!-- author yh.kim, (25.01.04)
                        휴점 활성 여부 체크 스케쥴러 -->
    <update id="restCheckScheduler">
        UPDATE direct_store ds
            JOIN rest r ON ds.id = r.id
            SET ds.is_close = 'N'
        WHERE DATE(r.end_date) = DATE_SUB(CURDATE(), INTERVAL 1 DAY)
    </update>
</mapper>