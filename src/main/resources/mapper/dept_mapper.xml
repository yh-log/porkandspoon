<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="kr.co.porkandspoon.dao.DeptDAO">

	<!-- 조직도 노드 불러오기 -->
	<select id="setChart" resultType="kr.co.porkandspoon.dto.DeptDTO">
		SELECT 
        d.id, 
        d.text, 
        CASE WHEN d.parent IS NULL THEN '#' ELSE d.parent END AS parent,
        'default' AS type,
        NULL AS menuOrder,
        NULL AS position
	    FROM department d
	    UNION ALL
	    SELECT 
        u.username AS id,
        u.name AS text,   
        u.parent AS parent, 
        'file' AS type,
        u.position AS menuOrder,
        NULL AS position
	    FROM user u
	    WHERE u.parent IS NOT NULL
	</select>

	<!-- 노드에서 클릭된 사원 정보 가져오기(부서명도 같이) -->
	<select id="getUserlist" resultType="kr.co.porkandspoon.dto.UserDTO">
		SELECT 
        u.*,
        d.text AS text,
        f.new_filename AS new_filename -- 프로필 이미지 파일명 추가
    	FROM 
        user u
    	LEFT JOIN 
        department d
        ON u.parent = d.id
    	LEFT JOIN 
        file f
        ON f.code_name = 'up100' -- 프로필 이미지 코드
        AND f.pk_idx = u.username -- 사용자와 파일의 연결
    	WHERE 
        u.username = #{username}
	</select>
	
	<select id="getOrgchart" resultType="kr.co.porkandspoon.dto.DeptDTO">
		SELECT 
        d.id, 
        d.text, 
        d.parent,
        'default' AS type,
        NULL AS menuOrder,
        NULL AS position
	    FROM department d
	    UNION ALL
	    SELECT 
        u.username AS id,
        u.name AS text,   
        u.parent AS parent, 
        'file' AS type,
        u.position AS menuOrder,
        NULL AS position
	    FROM user u
	    WHERE u.parent IS NOT NULL
	</select>
	
	<select id="getDeptdata" resultType="kr.co.porkandspoon.dto.DirectstoreDTO">
		SELECT ds.*, f.new_filename
	    FROM direct_store ds
	    LEFT JOIN file f ON f.pk_idx = ds.parent
	    WHERE ds.parent = #{departmentId}
      	AND f.code_name = 'bl001'
	</select>
	
	<!-- author yh.kim (24.12.29) 조직도 데이터 조회 -->
	<select id="getChartData" resultType="kr.co.porkandspoon.dto.DeptDTO" >
		WITH RECURSIVE menu_tree_cte AS (
		    SELECT 
		        id,
		        COALESCE(parent, '#') AS parent, 
		        text,
		        type, 
		        1 AS menu_depth
		    FROM department
		    WHERE parent IS NULL
		
		    UNION ALL
		
		    SELECT 
		        d.id,
		        COALESCE(d.parent, '#') AS parent,
		        d.text,
		        d.type, 
		        cte.menu_depth + 1 AS menu_depth
		    FROM department d
		    JOIN menu_tree_cte cte ON d.parent = cte.id
		),
		menu_and_employee AS (
		    SELECT 
		        id AS id,
		        parent,
		        text AS text,
		        menu_depth,
		        type, 
		        NULL AS position_order
		    FROM menu_tree_cte
		
		    UNION ALL
		
		    SELECT 
		        u.username AS id,
		        COALESCE(u.parent, '#') AS parent,
		        CONCAT(u.name, ' ', c.content) AS text,
		        4 AS menu_depth,
		        'file' AS type,
		        CAST(SUBSTRING(u.position, 3) AS UNSIGNED) AS position_order
		    FROM user u
		    JOIN code c ON u.position = c.name
		    JOIN menu_tree_cte cte ON u.parent = cte.id
		)
		SELECT 
		    id,
		    parent,
		    text,
		    menuDepth,
		    type,
		    menuOrder
		FROM (
		    SELECT 
		        id,
		        COALESCE(parent, '#') AS parent, 
		        text,
		        menu_depth AS menuDepth, 
		        COALESCE(type, 'file') AS type, 
		        ROW_NUMBER() OVER (
		            PARTITION BY parent, menu_depth
		            ORDER BY COALESCE(position_order, id) ASC
		        ) AS menuOrder 
		    FROM menu_and_employee
		) final_result
		ORDER BY menuDepth, menuOrder
	</select>
	
</mapper>