<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="kr.co.porkandspoon.dao.MyPageDAO">

   <!-- 마이페이지 정보 조회 (직영점 명도 가져오도록 수정 필요)-->
   <select id="myPageDetail" parameterType="String" resultType="kr.co.porkandspoon.dto.UserDTO">
      SELECT u.username, u.person_num, u.name, u.email, u.birth, u.phone, u.company_num, u.address, u.gender, u.join_date, u.leave_date, u.position, u.parent, u.title, c.content AS position_content, d.`text` AS dept_name, f.new_filename AS profile
         FROM user u LEFT JOIN code c ON u.position = c.name
            LEFT JOIN department d ON u.parent = d.id 
            LEFT JOIN file f ON u.username = f.pk_idx AND f.code_name = 'up100'
         WHERE u.username = #{username}
   </select>

   <!-- 직원 이력 조회 -->
   <select id="myPageCareerDetail" resultType="kr.co.porkandspoon.dto.CareerDTO" parameterType="String">
      SELECT username, type, subject, content, start_date, end_date FROM career WHERE username = #{username}
   </select>
   

   
  <select id="count" resultType="int">
    SELECT CEIL(count(meal_idx) / #{cnt_}) AS pages
    FROM meal_ticket
    <where>
        username = #{username} <!-- username은 필수 -->
        <if test="keyword != null and !keyword.equals('') and opt.equals('name')">
            AND name LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="keyword != null and !keyword.equals('') and opt.equals('create_date')">
            AND DATE_FORMAT(create_date, '%Y-%m-%d') LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
</select>
   
   <select id="buyList" resultType="kr.co.porkandspoon.dto.MealDTO">
    SELECT mt.meal_idx, mt.username, mt.is_buy, mt.count, mt.create_date,
           m.name AS meal_name,
           CASE WHEN mt.is_buy = 'U' THEN NULL ELSE m.cost END AS total_cost
    FROM meal_ticket mt
    LEFT JOIN meal m ON mt.meal_idx = m.meal_idx
    <where>
        mt.username = #{username} <!-- username은 필수 -->
        <if test="keyword != null and !keyword.equals('') and opt.equals('name')">
            AND m.name LIKE CONCAT('%', #{keyword}, '%')
        </if>
        <if test="keyword != null and !keyword.equals('') and opt.equals('create_date')">
            AND DATE_FORMAT(mt.create_date, '%Y-%m-%d') LIKE CONCAT('%', #{keyword}, '%')
        </if>
    </where>
    ORDER BY mt.create_date DESC
    LIMIT #{limit} OFFSET #{offset}
</select>

   <!-- 직원 정보 수정 -->
   <update id="myPageUpdate" parameterType="kr.co.porkandspoon.dto.UserDTO">
      UPDATE user SET email = #{email}, phone = #{phone}, address = #{address} WHERE username = #{username}
   </update>
   
   <!-- 직원 프로필 삭제 -->
   <delete id="fileDelete" parameterType="kr.co.porkandspoon.dto.FileDTO">
      DELETE FROM file WHERE code_name = #{code_name} AND pk_idx = #{pk_idx}
   </delete>
   
   <!-- 직원 프로필 업데이트 -->
   <insert id="fileUpdate" parameterType="kr.co.porkandspoon.dto.FileDTO">
      INSERT INTO file(code_name, ori_filename, new_filename, type, pk_idx) VALUES(#{code_name}, #{ori_filename}, #{new_filename}, #{type}, #{pk_idx})
   </insert>
   
   <select id="signExist" parameterType="String" resultType="kr.co.porkandspoon.dto.FileDTO">
      select * from file where pk_idx = #{pk_idx} and code_name = #{code_name}
   </select>

    <!-- author yh.kim (25. 01. 08)
		출장 리스트 조회 -->
    <select id="tripList" parameterType="kr.co.porkandspoon.dto.PagingDTO" resultType="kr.co.porkandspoon.dto.TripDTO">
        SELECT
        t.schedule_idx,
        t.start_date,
        t.end_date,
        t.subject,
        t.create_date,
        t.username,
        u.name,
        (SELECT COUNT(*)
        FROM trip t
        LEFT JOIN `user` u ON t.username = u.username
        WHERE u.username = #{username}
        <if test="option == 'subject' and keyword != null and keyword != ''">
            AND t.subject LIKE CONCAT('%', #{keyword}, '%')
        </if>
        ) AS totalpage
        FROM trip t
        LEFT JOIN `user` u ON t.username = u.username
        WHERE u.username = #{username} AND t.use_yn = 'Y'
        <if test="option == 'subject' and keyword != null and keyword != ''">
            AND t.subject LIKE CONCAT('%', #{keyword}, '%')
        </if>
        ORDER BY t.schedule_idx DESC
        LIMIT #{offset}, #{limit}
    </select>

    <!-- author yh.kim (25. 01. 08)
		출장 상세 페이지 이동 및 조회 -->
    <select id="tripDetail" parameterType="int" resultType="kr.co.porkandspoon.dto.TripDTO">
        SELECT t.start_date, t.end_date, t.subject, t.content, t.address, u.name, t.schedule_idx, t.idx
            FROM trip t LEFT JOIN user u ON t.username = u.username
        WHERE t.schedule_idx = #{schedule_idx}
    </select>

    <!-- author yh.kim (25. 01. 08)
		출장 비활성화 -->
    <update id="tripDelete" parameterType="kr.co.porkandspoon.dto.TripDTO">
        UPDATE trip SET use_yn = 'N' WHERE schedule_idx = #{schedule_idx}
    </update>

    <!-- author yh.kim (25. 01. 08)
		출장 등록 -->
    <insert id="tripWrite"
            useGeneratedKeys="true"
            keyProperty="schedule_idx"
            keyColumn="schedule_idx"
            parameterType="kr.co.porkandspoon.dto.TripDTO">
        INSERT INTO trip(username, start_date, end_date, subject, address, content, idx)
            VALUES (#{username}, #{start_date}, #{end_date}, #{subject}, #{address}, #{content}, #{idx})
    </insert>

    <!-- author yh.kim (25. 01. 08)
		출장 등록 시 캘린더 등록 -->
    <insert id="tripCalenderWrite"
            useGeneratedKeys="true"
            keyColumn="idx"
            keyProperty="idx"
            parameterType="kr.co.porkandspoon.dto.TripDTO">
        INSERT INTO schedule (username, start_date, end_date, subject, content, type, id)
        SELECT #{username}, #{start_date}, #{end_date}, #{subject}, #{content}, 'T', parent
        FROM user
        WHERE username = #{username}
    </insert>

    <!-- author yh.kim (25. 01. 08)
		출장 비활성화 시 캘린더 삭제 -->
    <delete id="tripCalenderDelete" parameterType="kr.co.porkandspoon.dto.TripDTO">
        DELETE FROM schedule WHERE idx = #{idx}
    </delete>

    <!-- author yh.kim (25. 01. 08)
		출장 수정 -->
    <update id="tripUpdate" parameterType="kr.co.porkandspoon.dto.TripDTO">
        UPDATE trip SET
                subject = #{subject}, content = #{content},
                start_date = #{start_date}, end_date = #{end_date},
                address = #{address}, updater = #{username}
        WHERE schedule_idx = #{schedule_idx}
    </update>
    
    <!-- author yh.kim (25. 01. 08)
		출장 수정 시 캘린더 수정 -->
    <update id="tripCalenderUpdate" parameterType="kr.co.porkandspoon.dto.TripDTO">
        UPDATE schedule SET subject = #{subject}, content = #{content}, start_date = #{start_date}, end_date = #{end_date}
            WHERE idx = #{idx}
    </update>


</mapper>