<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="kr.co.porkandspoon.dao.FoodieDAO">

	<!-- 매장 중복검사 -->
	<select id="getoverlapStore" parameterType="kr.co.porkandspoon.dto.FoodieDTO" resultType="int">
		SELECT COUNT(*) 
		FROM food_map 
		WHERE store_name = #{store_name}
	</select>

	<!-- 맛집 등록 -->
	<insert
	 	id="setStoreWrite" 
		useGeneratedKeys="true" 
	   	keyColumn="store_idx" 
	   	keyProperty="store_idx" 
	 	parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		INSERT INTO food_map (store_latitude, store_longitude, store_address, store_name, store_category)
			VALUES(#{store_latitude}, #{store_longitude}, #{store_address}, #{store_name}, #{store_category})
	</insert>
	
	<!-- 리뷰 등록 -->
	<insert
		useGeneratedKeys="true" 
	   	keyColumn="review_idx" 
	   	keyProperty="review_idx" 
		id="setReviewWrirte" 
		parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		INSERT INTO food_review (store_idx, username, content, review_star)
			VALUES(#{store_idx}, #{username}, #{content}, #{review_star})
	</insert>
	
	<!-- 매장 리스트 가져오기 -->
	<select id="getFoodieList" parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		SELECT 
	        fm.*,
	        ROUND(AVG(fr.review_star), 1) AS total_review_star
	    FROM 
	        food_map fm
	    LEFT JOIN 
	        food_review fr 
	        ON fm.store_idx = fr.store_idx
        <where>
	        <if test="filter != null and filter != ''">
	            AND fm.store_category = #{filter}
	        </if>
	    </where>
	    GROUP BY 
	        fm.store_idx
	</select>
	
	<select id="getReviewList" parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		SELECT 
	        fr.*,
	        u.name AS name,
	        fm.store_name AS store_name, 
	        fm.store_category,
	        ROUND(AVG(fr.review_star) OVER(PARTITION BY fr.store_idx), 1) AS total_review_star
	    FROM 
	        food_review fr
	    JOIN 
	        user u 
	        ON fr.username = u.username
	    JOIN 
	        food_map fm 
	        ON fr.store_idx = fm.store_idx  
	    WHERE 
	        fr.store_idx = #{store_idx}
	    ORDER BY 
	        fr.review_idx DESC
	</select>
	
	<select id="getstoreidx" parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		SELECT store_idx FROM food_review WHERE review_idx = #{review_idx}
	</select>
	
	<update id="setDeleteR" parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		UPDATE food_review
	    SET use_yn = 'N'
	    WHERE review_idx = #{review_idx}
	</update>
	
	<select id="getStoreidx" parameterType="kr.co.porkandspoon.dto.FoodieDTO">
		SELECT store_idx FROM food_review WHERE review_idx = #{review_idx}
	</select>
</mapper>