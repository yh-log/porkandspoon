<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="kr.co.porkandspoon.dao.ProjectDAO">
	 <!-- DeptDTO에 대한 ResultMap-->
    <resultMap id="DeptMap" type="kr.co.porkandspoon.dto.DeptDTO">
        <result property="text" column="text"/>
        <result property="parent" column="parent"/>
    </resultMap>

    <!-- UserDTO에 대한 ResultMap -->
    <resultMap id="UserMap" type="kr.co.porkandspoon.dto.UserDTO">
        <result property="username" column="username"/>
        <result property="name" column="name"/>
        <result property="position_content" column="position_content"/>
        <!-- dept는 DeptMap을 참조 -->
        <association property="dept" resultMap="DeptMap"/>
    </resultMap>
	 
	<select id="getUserInfo" resultMap="UserMap">
        SELECT 
            u.username, u.name, c.content AS position_content	, u.parent, d.text
        FROM 
            user u
        JOIN 
            department d
	        ON  
	            u.parent = d.id
		JOIN
			code c
			ON
				u.position = c.name
        WHERE 
            u.username = #{userId}
    </select>
	
	<insert 
		useGeneratedKeys="true"
	     keyColumn="project_idx"
	     keyProperty="project_idx"
		id="setProject" parameterType="Map">
		INSERT INTO project(username,name,start_date,end_date,is_open)VALUES(#{username},#{name},#{start_date},#{end_date},#{is_open})
	</insert>

	<insert id="setProjectPeoloe" parameterType="String">
		insert into project_people(project_idx,username)values(#{project_idx},#{loginId})
	</insert>

<select id="getProject" resultType="kr.co.porkandspoon.dto.ProjectDTO">
    SELECT 
        p.*, 
        COUNT(pp.username) AS count 
    FROM 
        project p
    LEFT JOIN 
        project_people pp ON p.project_idx = pp.project_idx
    <where>
        <!-- 로그인한 사용자가 소유자 -->
        (p.username = #{loginId}
        
        <!-- 공개 프로젝트 필터 -->
        <if test="isOpen">
            OR p.is_open = 'Y'
        </if>
        
        <!-- 비공개 프로젝트 필터 -->
        <if test="!isOpen">
            OR (
                p.is_open = 'N'
                AND pp.username = #{loginId}
            )
        </if>)
        
        <!-- 진행 상태 필터 -->
        <if test="includeCompleted and !includeInProgress">
            AND p.percent = 100
        </if>
        <if test="!includeCompleted and includeInProgress">
            AND p.percent &lt; 100
        </if>
        
        <!-- 제목 검색 필터 -->
        <if test="searchKeyword != null and searchKeyword != ''">
            AND p.name LIKE CONCAT('%', #{searchKeyword}, '%')
        </if>
    </where>
    GROUP BY 
        p.project_idx
</select>







	
	<select id="getProjectInfo" resultType="kr.co.porkandspoon.dto.ProjectDTO">
		SELECT p.*,COUNT(pp.username) as count  FROM project p
		LEFT JOIN project_people pp ON p.project_idx = pp.project_idx
		WHERE p.project_idx = #{project_idx}
	</select>


	<select id="getKanBanInfo" resultType="kr.co.porkandspoon.dto.ProjectDTO">
		SELECT * FROM project_content WHERE project_idx = #{project_idx}
	</select>

	<insert 
	 	useGeneratedKeys="true"
	     keyColumn="kanban_idx"
	     keyProperty="kanban_idx"
		 id="setTask" parameterType="Map">
		INSERT INTO project_content(project_idx,subject,content,creater,is_class)
			VALUES(#{project_idx},#{subject},#{content},#{creater},#{is_class})
	</insert>

	<update id="editStatus" parameterType="Map">
		UPDATE project_content
		    SET 
		        is_class = #{is_class},
		        updater = #{updater}
	    WHERE kanban_idx = #{kanban_idx}
	</update>
	
	<select id="getPercent" resultType="String">
		SELECT 
		    ROUND((COUNT(CASE WHEN is_class = 'D' THEN 1 END) * 100.0) / COUNT(*), 1) AS percentage
		FROM 
		    project_content
		WHERE 
    		project_idx =#{project_idx};
	</select>
	
	<update id="editPercent" parameterType="Map">
		UPDATE project
		SET
			percent = #{percent}
			WHERE project_idx = #{project_idx}
	</update>
	
	<update id="eiditProject" parameterType="Map">
		UPDATE project
		    SET 
		        name = #{name},
		        start_date = #{start_date},
		        end_date = #{end_date},
		        is_open = #{is_open},
		        updater = #{loginId}
	    WHERE project_idx = #{project_idx}
	</update>

</mapper>