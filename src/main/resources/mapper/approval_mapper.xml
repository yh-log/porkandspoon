<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="kr.co.porkandspoon.dao.ApprovalDAO">
   <!-- DeptDTO에 대한 ResultMap-->
    <resultMap id="DeptMap" type="kr.co.porkandspoon.dto.DeptDTO">
        <result property="text" column="text"/>
        <result property="parent" column="parent"/>
    </resultMap>

    <!-- UserDTO에 대한 ResultMap -->
    <resultMap id="UserMap" type="kr.co.porkandspoon.dto.UserDTO">
        <result property="username" column="username"/>
        <result property="name" column="name"/>
        <!-- dept는 DeptMap을 참조 -->
        <association property="dept" resultMap="DeptMap"/>
    </resultMap>

    <!-- 사용자 정보를 가져오는 select 문 -->
    <select id="getUserInfo" resultMap="UserMap">
        SELECT 
            u.username, u.name, u.parent, d.text
        FROM 
            user u
        JOIN 
            department d
        ON  
            u.parent = d.id
        WHERE 
            u.username = #{loginId}
    </select>
	
	
	
<!-- 	<select id="getUserInfo" resultType="kr.co.porkandspoon.dto.UserDTO">
		SELECT 
			u.username, u.name, u.parent, d.text
			FROM 
				user u
			JOIN department d
			ON  u.parent = d.id
			WHERE 
				username = #{loginId}
	</select> -->
	
	<select id="getDeptList" resultType="kr.co.porkandspoon.dto.DeptDTO">
		SELECT id, text FROM department
	</select>
	
	<select id="getDraftIdx">
		SELECT MAX(draft_idx) + 1 FROM draft
	</select>
	
	
<!-- 	INSERT INTO draft_document (document_id, title, content)
VALUES (1, '기안문 제목', '기안문 내용')
ON DUPLICATE KEY UPDATE
title = VALUES(title),
content = VALUES(content); -->
	
	
	
<!-- 	useGeneratedKeys="true"
		keyColumn="draft_idx"
		keyProperty="draft_idx" -->
	
	<insert id="saveDraft" parameterType="kr.co.porkandspoon.dto.ApprovalDTO">
		INSERT INTO draft (username, target_type, action_type,
			 status, dept_id, document_number
			 <if test="draft_idx != null">
			 ,draft_idx
			 </if>
			 <if test="subject != null">
			 ,subject
			 </if>
			 <if test="name != null">
			 ,name
			 </if>
			 <if test="content != null">
			 ,content
			 </if>
			 <if test="from_date != null">
			 ,from_date
			 </if>
		  	<if test="address != null">
            	,address
        	</if>
		  	<if test="address_detail != null">
            	,address_detail
        	</if>
		  	<if test="cooper_dept_id != null">
            	,cooper_dept_id
        	</if>
		)
		VALUES (
			#{username}, #{target_type}, #{action_type}
			 ,#{status}, #{dept_id}, #{document_number}
			 <if test="draft_idx != null">
			  , #{draft_idx}
			 </if>
			<if test="subject != null">
			 , #{subject}
			 </if>
			<if test="name != null">
			 , #{name}
			 </if>
			<if test="content != null">
			  ,#{content}
			</if>
			<if test="from_date != null">
			  ,#{from_date}
			</if>
			<if test="address != null">
            	,#{address}
        	</if>
		  	<if test="address_detail != null">
            	,#{address_detail}
        	</if>
		  	<if test="cooper_dept_id != null">
            	,#{cooper_dept_id}
        	</if>
		) ON DUPLICATE KEY UPDATE
			status = VALUES(status),
			dept_id = VALUES(dept_id),
			subject = VALUES(subject),
			name = VALUES(name),
			content = VALUES(content),
			from_date = VALUES(from_date),
			address = VALUES(address),
			address_detail = VALUES(address_detail),
			cooper_dept_id = VALUES(cooper_dept_id)
	</insert>
	
	<select id="checkExistingApprovalLine" resultType="int">
	    SELECT COUNT(*)
	    FROM approval_line
	    WHERE draft_idx = #{draftIdx}
	</select>
	
	<insert id="saveApprovalLine">
		INSERT INTO approval_line (draft_idx, username, order_num) 
		values
	    <foreach collection="appr_user" item="appritem" index="index" separator=",">
	        (#{draftIdx}, #{appritem}, #{index})
	    </foreach>
	</insert>

	<insert id="removeApprovalLine">
		DELETE FROM approval_line WHERE draft_idx = #{draft_idx}
	</insert>
	
	<select id="checkExistingFile" resultType="int">
		SELECT COUNT(*) FROM file
			WHERE code_name = 'df000' 
			AND pk_idx = #{draftIdx}
			AND ori_filename = #{ori_filename}
	</select>
	
	
	
	
	<select id="getMaxNumberForDate" resultType="Integer">
	    SELECT MAX(SUBSTRING(document_number, 10, 6))
	    FROM draft
	    WHERE document_number LIKE CONCAT(#{date}, '%')
	    FOR UPDATE
	</select>
	
	<!-- 파일 정보 저장 -->
	<!--<insert id="fileWrite" parameterType="kr.co.porkandspoon.dto.FileDTO">
		insert into file (code_name, ori_filename, new_filename, type, pk_value)
			values (#{code_name}, #{ori_filename}, #{new_filename}, #{type}, #{pk_value})
	</insert>-->
	
	<insert id="fileSave" parameterType="kr.co.porkandspoon.dto.FileDTO">
		insert into file (code_name, ori_filename, new_filename, type, pk_idx)
			values (#{code_name}, #{ori_filename}, #{new_filename}, #{type}, #{pk_idx})
	</insert>
	
	
	<select id="getDraftInfo" parameterType="String" resultType="kr.co.porkandspoon.dto.ApprovalDTO">
		SELECT d.draft_idx, d.document_number, d.create_date, d.username, d.target_type, d.action_type, d.subject, d.name, d.from_date, d.content, d.address, d.address_detail, d.cooper_dept_id, d.dept_id, d.status, u.name AS user_name, de.text AS dept_name
			FROM draft d LEFT JOIN user u ON d.username = u.username
			LEFT JOIN department de ON d.dept_id = de.id
			WHERE draft_idx = #{draft_idx}
	</select>
	
	<select id="getApprLine" parameterType="String" resultType="kr.co.porkandspoon.dto.ApprovalDTO">
		SELECT a.*, c.name AS position, u.name AS user_name, f.new_filename AS sign, f.code_name FROM approval_line a 
			JOIN user u ON a.username = u.username 
			JOIN code c ON u.position = c.name
			JOIN file f ON a.username = f.pk_idx
			WHERE draft_idx = #{draft_idx} 
			AND f.code_name = 'us100'
	</select>
	
	<select id="getLogoFile" parameterType="String" resultType="kr.co.porkandspoon.dto.FileDTO">
		SELECT ori_filename, new_filename, pk_idx FROM file 
			WHERE code_name = 'bl001' 
			AND pk_idx = #{draft_idx}
	</select>

	<select id="getAttachedFiles" parameterType="String" resultType="kr.co.porkandspoon.dto.FileDTO">
		SELECT ori_filename, new_filename, pk_idx FROM file 
			WHERE code_name = 'df000' 
			AND pk_idx = #{draft_idx}
	</select>
	
	
	
	
	
	<update id="updateDraft" parameterType="kr.co.porkandspoon.dto.ApprovalDTO">
		UPDATE draft SET 
			 	subject = #{subject}
				 ,name = #{name}
				 ,content = #{content}
				 ,from_date = #{from_date}
            	,address = #{address}
            	,address_detail = #{address_detail}
            	,cooper_dept_id = #{cooper_dept_id}
        	 WHERE draft_idx = #{draft_idx}
	</update>
	
	<delete id="deleteFiles" parameterType="kr.co.porkandspoon.dto.FileDTO">
		DELETE FROM file
			WHERE code_name IN ('df000','bl001')
			AND pk_idx = #{pk_idx} 
			AND new_filename = #{new_filename}
	</delete>
	
	<insert id="returnDraft" parameterType="kr.co.porkandspoon.dto.ApprovalDTO">
		UPDATE approval_line 
			SET status = 'ap003',
				comment = #{comment},
				approval_date = #{approval_date} 
			WHERE draft_idx = #{draft_idx}
			AND username = #{username}
			
	</insert>
	
</mapper>